name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.200

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal
  
  binaries:
    needs: build
    timeout-minutes: 10    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "windows-latest"
            script: "build-windows.ps1"
            output: "./dist/win-x64"
          - os: "ubuntu-latest"
            script: "build-linux.ps1"
            output: "./dist/linux-x64"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.200

      - name: Fix file content
        if: matrix.os != 'windows-latest'
        run: sed -i 's/\r//g' ${{ matrix.script }}

      - name: Install PowerShell
        if: matrix.os != 'windows-latest'
        run: dotnet tool install --global PowerShell
          
      - name: PowerShell script
        shell: pwsh
        run: pwsh -File ${{ matrix.script }} -Passthru

      - name: List files in output directory
        run: pwsh -c "Get-ChildItem -Path $env:MATRIX_OUTPUT -Recurse -Passthru"
        env:
          MATRIX_OUTPUT: ${{ matrix.output }}
          
      - name: GitHub Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          directory: ${{ matrix.output }}
          
